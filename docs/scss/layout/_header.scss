
.header {
    @include rem(padding,24px);
    background-color: map-get($COLORS, bg);
    position: sticky;
    top: 0;
    z-index: 50;

    &__container {
        @include rem(max-width,1030px);
    }
    &__body {
        @include rem((
            padding:24px,
            border-radius:20px,
            gap:5px 46px
        ));
        background: rgba(map_get($COLORS, white), .05);
        box-shadow: 
            0px 25px 50px -12px rgba(map_get($COLORS, black), .25),
            0px 0px 15px 0px rgba(map_get($COLORS, black), .07);

        display: grid;
        grid-template-columns: auto 1fr auto;
        align-items: center;
    }

    &__link-logo {
        @include rem(font-size,32px);
        font-weight: 700;
        @include line-height(35.2px,32px); 
        transition: color .3s ease-in-out;

        &:hover {
            color: map_get($COLORS, purple_light);
        }
    }

    &__actions {
        display: flex;
        flex-flow: row wrap;
        @include rem(gap,16px);
        align-items: center;
    }
}

.actions-header {
    $originTop: pxToRem(10px);
    $originBottom: pxToRem(10px);
    $speed: .13s;

    &__burger {
        display: none;
        position: relative;
        @include rem((
            width:48px,
            height:48px
        ));
        background-color: transparent;
        cursor: pointer;

        &::before,
        &::after,
        span {
            position: absolute;
            height: 4px;
            background-color: map_get($COLORS, white);
            border-radius: 4px;
            width: 100%;
        }

        &::before {
            content: "";
            top: $originTop;
            left: 0;
        }

        span {
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        &::after {
            content: "";
            bottom: $originBottom;
            right: 0;
        }
        
    }


    

    &.active {
        .actions-header__burger {

            @mixin combo-animation($side) {
                @if $side != middle {
                    $animation-move: burger-active-move-#{$side};
                    $animation-rotate: burger-active-rotate-#{$side};
                    $animation-color: burger-active-color-#{$side};

                    @keyframes #{$animation-move} {
                        100% {
                            #{$side}: 50%;
    
                            @if $side == top {
                                transform: translate(0, -50%);
                            }
                            @else if $side == bottom {
                                transform: translate(0, 50%);
                            }
                            
                        }
                    }
                    @keyframes #{$animation-rotate} {
                        0% {
                            @if $side == top {
                                transform: translate(0, -50%) rotate(-180deg);
                            }
                            @else if $side == bottom {
                                transform: translate(0, 50%) rotate(-180deg);
                            }
                        }
                        100% {
                            @if $side == top {
                                transform: translate(0, -50%) rotate(45deg);
                            }
                            @else if $side == bottom {
                                transform: translate(0, 50%) rotate(-45deg);
                            }
                        }
                    }
                    @keyframes #{$animation-color} {
                        100% {
                            background-color: map_get($COLORS, purple_dark);
                        }
                    }
        
                    animation:  #{$animation-move} $speed ease-in-out forwards,
                                #{$animation-color} $speed ease-in-out calc($speed - .2s) forwards,
                                #{$animation-rotate} $speed ease-in-out calc($speed * 2) forwards;
                }
                @else {
                    $animation-opacity: burger-active-opacity-#{$side};
                    $animation-color: burger-active-color-#{$side};

                    @keyframes #{$animation-opacity} {
                        100% {
                            opacity: 0;
                        }
                    }
                    @keyframes #{$animation-color} {
                        100% {
                            background-color: map_get($COLORS, purple_dark);
                        }
                    }

                    animation: 
                        #{$animation-color} $speed ease-in-out calc($speed - .2s) forwards,
                        #{$animation-opacity} $speed ease-in-out $speed forwards;
                }
                
                            
            }

            &::before {
                @include combo-animation(top);
            }
            span {
                @include combo-animation(middle);
            }
            &::after {
                @include combo-animation(bottom);
            }
        }

       
    }

    &.reverse {
        .actions-header__burger {
            @mixin combo-animation($side) {
                @if $side != middle {
                    $animation-move: burger-reverse-move-#{$side};
                    $animation-rotate: burger-reverse-rotate-#{$side};
                    $animation-color: burger-reverse-color-#{$side};
                    

                    @keyframes #{$animation-rotate} {
                        100% {
                            #{$side}: 50%;

                            @if $side == top {
                                transform: translate(0, -50%) rotate(-180deg);
                            }
                            @else if $side == bottom {
                                transform: translate(0, 50%) rotate(-180deg);
                            }
                            
                        }
                    }
                    @keyframes #{$animation-move} {
                        100% {
                            @if $side == top {
                                #{$side}: $originTop;
                            }
                            @else if $side == bottom {
                                #{$side}: $originBottom;
                            }
                            transform: translate(0, 0) rotate(-180deg);
                        }
                    }
                    @keyframes #{$animation-color} {
                        0% {
                            background-color: map_get($COLORS, purple_dark);
                        }
                        50% {
                            background-color: map_get($COLORS, purple_dark); 
                        }
                        100% {
                            background-color: map_get($COLORS, white);
                        }
                    }

                    animation: 
                        $animation-rotate $speed ease-in-out forwards,
                        $animation-color calc($speed * 2) ease-in-out forwards,
                        $animation-move $speed ease-in-out calc($speed * 2) forwards;
                }
                @else {
                    $animation-opacity: burger-reverse-opacity-#{$side};
                    $animation-color: burger-reverse-color-#{$side};

                    @keyframes #{$animation-opacity} {
                        0% {
                            opacity: 0;
                        }
                        100% {
                            opacity: 1;
                        }
                    }
                    @keyframes #{$animation-color} {
                        0% {
                            background-color: map_get($COLORS, purple_dark);
                        }
                        100% {
                            background-color: map_get($COLORS, white);
                        }
                    }

                    animation: 
                        $animation-opacity calc($speed * 4) ease-in-out forwards,
                        $animation-color calc($speed * 2) ease-in-out $speed forwards;

                }
            }

            &::before {
                @include combo-animation(top);
            }
            span {
                @include combo-animation(middle);
            }
            &::after {
                @include combo-animation(bottom);
            }
        }
    }
       
    
}

.menu {
    @include rem(left, -1000px);
    transition: left .3s ease-in-out;

    &__list {
        display: flex;
        flex-flow: row wrap;
        @include rem(gap,5px 32px);
    }

    &__link {
        @include rem(font-size,16px);
        font-weight: 500;
        @include line-height(23px,16px);
        letter-spacing: .5px;
        transition: color .3s ease-in-out;

        &:hover {
            color: map_get($COLORS, purple_light);
        }
    }
}


@media (max-width: map_get($MEDIA, tablet)) {
    .header {
        @include rem(padding,(24px * .7));

        &__body {
            @include rem((
                padding: calc(24px * .7),
                gap: 5px calc(46px * .5)
            ))
        }

        &__actions {
             @include rem(gap,5px calc(16px * .7));

            .actions-header__button {
                &._button--min {
                    @include rem(padding, 12px 15px);
                }
            }
        }
    }

    .menu {
        &__list {
            @include rem(gap, 5px calc(46px * .5));
        }
        &__link {
            @include rem(font-size, calc(16px * .8));
        }
    }
}

@media (max-width: map_get($MEDIA, mobile)) {
    .header { 
        &__body {
            @include rem(padding, 8px 24px);
            grid-template-columns: auto auto;
            justify-content: space-between;
        }

        &__actions {
            button {
                display: block;
            }
        }
    }
    .menu {
        @include rem(padding, calc(24px * .7));
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: map_get($COLORS, blue_dark);
        @include rem(top, 87px);

        &.active {
            left: 0;
        }

        &::before {
            content: "";
            position: fixed;
            @include rem((
                width:64px,
                top:8px,
                left:15px,
                right:15px,
                border-radius: 20px
            ));

            background-color: rgba(map_get($COLORS, white), .05);
            box-shadow: 
                0px pxToRem(25px) pxToRem(50px) pxToRem(-12px) rgba(map_get($COLORS, black), .25),
                0px 0px pxToRem(15px) 0px rgba(map_get($COLORS, black), .07);
        }

        &__list {
            @include rem(padding, 0 calc(24px * .7 * 2));
            display: flex;
            flex-flow: row wrap;
            flex-direction: column;
            align-items: flex-end;
        }
    }
}

@media (max-width: map_get($MEDIA, mobile_small)) {
    .header {
        @include rem(padding, calc(24px * .8) 0);

        &__link-logo {
            @include rem(font-size, calc(32px * .6));
        }
        &__actions {
            a {
                display: none;
            }
        }
    }
    .actions-header {
        &__burger {
            @include rem((
                width: calc(48px * 0.7),
                height: calc(48px * 0.7)
            ));

            span,
            &::before,
            &::after {
                height: 3px;
            }
        }
    }
    .menu {
        @include rem(top,67px);

        &.active {
            left: 0;
        }
    }
}